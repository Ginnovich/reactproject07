{"version":3,"sources":["TODO/TodoList.js","GameComponents/Square.js","GameComponents/Board.js","GameComponents/Game.js","App.js","reportWebVitals.js","GameComponents/StepsCount.js","index.js"],"names":["TodoList","colors","X","O","Square","props","className","onClick","style","borderColor","value","color","Board","renderSquare","i","squares","Game","state","history","Array","fill","stepNumber","xIsNext","this","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","React","Component","lines","a","b","c","ReactDOM","render","document","getElementById","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StepsCount","useState","count","setCount","prevCount","StrictMode"],"mappings":"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","file":"static/js/main.c0aea123.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function TodoList() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n} ","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst colors = {X: \"violet\", O: \"blue\"};\r\n\r\nexport default function Square(props) {\r\n    return (\r\n      <button className=\"square\" \r\n        onClick={props.onClick} \r\n        style={{borderColor: colors[props.value], color: colors[props.value]}}\r\n        >\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nexport const useRandomColor = () => {\r\n    const colors = [\"violet\", \"blue\"];\r\n    const LenColors = colors.length;\r\n\r\n    const [color, setColor] = useState(\"violet\");\r\n\r\n    const changeColor = () => {\r\n        const index = Math.floor(Math.random() * LenColors);\r\n        const pickedColor = colors[index];\r\n        setColor(pickedColor);\r\n    };\r\n\r\nconsole.log (color);\r\n\r\n    return (\r\n      <Square onClick={changeColor}></Square>\r\n    )\r\n}","import React from 'react'\r\nimport Square from './Square'\r\n\r\nexport default function Board (props) {\r\n    function renderSquare (i) {\r\n      return (\r\n        <Square \r\n          value={props.squares[i]} \r\n          onClick={() => props.onClick(i) }\r\n          />\r\n        );\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {renderSquare(0)}          \r\n          {renderSquare(1)}\r\n          {renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {renderSquare(3)}          \r\n          {renderSquare(4)}\r\n          {renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {renderSquare(6)}\r\n          {renderSquare(7)}\r\n          {renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Board from './Board'\r\n\r\nclass Game extends React.Component {\r\n    handleClick(i) {\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i]=this.state.xIsNext ? 'X' : 'O' ;\r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares,\r\n        }]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext,\r\n      });\r\n  }\r\n  \r\n    jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n  \r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Перейти к ходу #' + move :\r\n        'К началу игры';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    \r\n    let status;\r\n    if (winner) {\r\n      status = 'Выиграл ' + winner;\r\n    } else {\r\n      status = 'Следующий ход: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n    \r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Game","import React from 'react'\nimport TodoList from './TODO/TodoList'\nimport Game from './GameComponents/Game'\n\nfunction App() {\n  return <div>\n    <TodoList />\n    <Game />\n    </div>\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react'\r\n\r\nexport default function StepsCount() {\r\n    const [count, setCount] = useState(4)\r\n\r\n    function decrementCount() {\r\n        setCount(prevCount => prevCount - 1)\r\n    }\r\n\r\n    function incrementCount() {\r\n        setCount(prevCount => prevCount + 1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button onClick={decrementCount}>-</button>\r\n            <span>{count}</span>\r\n            <button onClick={incrementCount}>+</button>    \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport StepsCount from '../src/GameComponents/StepsCount'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <StepsCount />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}